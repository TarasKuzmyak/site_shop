from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from django.http import JsonResponse
from .models import Cart, Product
from django.contrib.auth import login, authenticate
from .forms import RegistrationForm
from django.contrib.auth.forms import PasswordChangeForm
from django.contrib.auth import update_session_auth_hash
from .models import Order
from django.contrib.auth.models import User
from django.http import HttpResponse
from django.contrib.auth import get_user_model




User = get_user_model()





def index(request):
    return render(request, 'products/index.html')


def headsets(request):
    headsets = Product.objects.filter(category='headsets')  # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ —Ç–∞–∫–∞ –º–æ–¥–µ–ª—å —î
    return render(request, 'products/headsets.html', {'headsets': headsets})


def keyboard(request):
    keyboards = Product.objects.filter(category="keyboard")
    return render(request, 'products/keyboard.html', {'keyboards': keyboards})  # –û–ù–û–í–õ–ï–ù–û




def mouse(request):
    mice = Product.objects.filter(category="mouse")
    return render(request, 'products/mouse.html', {'mice': mice})


def login_view(request):
    if request.method == "POST":
        print("–§–æ—Ä–º–∞ –ª–æ–≥—ñ–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞!")  # üî• –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ–¥ –≤–∑–∞–≥–∞–ª—ñ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è

        email = request.POST["email"]
        password = request.POST["password"]

        try:
            user = User.objects.get(email=email)
            print("–ó–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", user)  # üî• –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ—Å–Ω—É—î
            user = authenticate(request, username=user.username, password=password)  
            print("–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user)  # üî• –ß–∏ —Å–ø—Ä–∞—Ü—é–≤–∞–≤ –ª–æ–≥—ñ–Ω
        except User.DoesNotExist:
            print("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ!")
            user = None

        if user is not None:
            login(request, user)
            print("–õ–æ–≥—ñ–Ω —É—Å–ø—ñ—à–Ω–∏–π, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è!")
            return redirect("/profile/")  # üîπ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –ª–æ–≥—ñ–Ω–∞

        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å!")
            return render(request, "products/login.html", {"error": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å"})

    return render(request, "products/login.html")






def registration(request):
    if request.method == "POST":
        form = RegistrationForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)  # –ê–≤—Ç–æ–≤—Ö—ñ–¥ –ø—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
            return redirect("index")  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    else:
        form = RegistrationForm()
    return render(request, "registration.html", {"form": form})

def profile(request):
    return render(request, "products/profile.html")


@login_required
def orders(request):
    # –Ø–∫—â–æ —É —Ç–µ–±–µ —î –º–æ–¥–µ–ª—å Order, –æ—Ç—Ä–∏–º–∞–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_orders = request.user.order_set.all() if hasattr(request.user, "order_set") else []
    
    return render(request, "orders.html", {"orders": user_orders})

@login_required
def wishlist(request):
    # –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —ñ–∑ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—è–∫—â–æ —î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∞ –º–æ–¥–µ–ª—å)
    user_wishlist = request.user.wishlist.all() if hasattr(request.user, "wishlist") else []
    
    return render(request, "wishlist.html", {"wishlist": user_wishlist})    

@login_required
def change_password(request):
    if request.method == "POST":
        form = PasswordChangeForm(request.user, request.POST)
        if form.is_valid():
            user = form.save()
            update_session_auth_hash(request, user)  # –©–æ–± –Ω–µ —Ä–æ–∑–ª–æ–≥—ñ–Ω–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è
            return redirect("profile")
    else:
        form = PasswordChangeForm(request.user)

    return render(request, "change_password.html", {"form": form})


@login_required
def order_detail(request, order_id):
    order = get_object_or_404(Order, id=order_id, user=request.user)  # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–µ–∂–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    return render(request, "order_detail.html", {"order": order})


def ajazz_ak820_pro_view(request):
    product = get_object_or_404(Product, name="AJAZZ AK820 Pro")  # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–¥—É–∫—Ç
    return render(request, 'products/main_product/main_keyboard/Ajazz820pro.html', {'product': product})

def aula_f75_view(request):
    product = get_object_or_404(Product, name="AULA F75")  # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–¥—É–∫—Ç
    return render(request, 'products/main_product/main_keyboard/Aulaf75.html', {'product': product})


def royal_kludge_r75_view(request):
    product = get_object_or_404(Product, name="Royal Kludge R75")  # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–¥—É–∫—Ç
    return render(request, 'products/main_product/main_keyboard/Royal Kludge R75.html', {'product': product})


def aula_f87_view(request):
    product = Product.objects.filter(name="AULA F87").first()  # –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à–∏–π –∑–∞–ø–∏—Å
    if not product:
        return render(request, 'products/main_product/main_keyboard/AULA F87.html', {'error': "–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"})
    return render(request, 'products/main_product/main_keyboard/AULA F87.html', {'product': product})


def ajazz_ak820_pro_moa_view(request):
    product = get_object_or_404(Product, name="AJAZZ AK820 Pro MOA")  # –ó–∞–±–µ–∑–ø–µ—á—É—î–º–æ, —â–æ –ø—Ä–æ–¥—É–∫—Ç —ñ—Å–Ω—É—î
    return render(request, 'products/main_product/main_keyboard/AJAZZ_AK820_Pro_MOA.html', {'product': product})
 



def ajazz_ak820_view(request):
    product = get_object_or_404(Product, name="AJAZZ AK820")  
    return render(request, 'products/main_product/main_keyboard/AJAZZ  AK 820.html', {'product': product})


@login_required
def add_to_cart(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    cart_item, created = Cart.objects.get_or_create(user=request.user, product=product)
    
    if not created:
        cart_item.quantity += 1
        cart_item.save()

    return redirect('cart')

@login_required
def cart_view(request):
    cart_items = Cart.objects.filter(user=request.user)
    total_price = sum(item.total_price() for item in cart_items)
    return render(request, 'cart.html', {'cart_items': cart_items, 'total_price': total_price})

@login_required
def remove_from_cart(request, item_id):
    cart_item = get_object_or_404(Cart, id=item_id, user=request.user)
    cart_item.delete()
    return redirect('cart')


def buy_product_view(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    return render(request, 'products/buy.html', {'product': product})

def product_detail(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    return render(request, 'products/main_product/main_keyboard/AJAZZ  AK 820.html', {'product': product})

